buildscript {
  ext {
    kotlinVersion = "1.2.10"
    springBootVersion = "2.0.0.M7"
  }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
  }
}

plugins {
  id "idea"
  id "java"
  id "eclipse"
  id "org.jetbrains.kotlin.plugin.noarg" version "1.2.10"
  id "org.jetbrains.kotlin.plugin.allopen" version "1.2.10"
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

allprojects {
  group = "daggerok"
  version = "0.0.1"
  targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
  kotlinOptions.jvmTarget = targetCompatibility
}

compileTestKotlin {
  kotlinOptions.jvmTarget = targetCompatibility
}

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
  jcenter()
  maven { url "https://jitpack.io" }
}

dependencies {
  compile "org.springframework.boot:spring-boot-starter-webflux",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
      "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
      "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2",
      "com.samskivert:jmustache",
      "com.github.daggerok:publish-to-github-example:0.0.1"
  compileOnly("org.projectlombok:lombok")
  testCompile("org.springframework.boot:spring-boot-starter-test")
  testCompile("io.projectreactor:reactor-test")
  testCompileOnly("org.projectlombok:lombok")
}

task wrapper(type: Wrapper) {
  gradleVersion = "4.4.1"
  distributionType = "ALL"
}

jar.enabled = false

bootJar {
  launchScript()
  mustRunAfter jar
  classifier = "all"
}
